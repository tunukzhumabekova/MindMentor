buildscript {
	dependencies {
		classpath("org.postgresql:postgresql:42.7.1")
		classpath("org.flywaydb:flyway-database-postgresql:10.4.1")
	}
	repositories {
		mavenCentral()
	}
	ext {
		default_url = 'jdbc:postgresql://localhost:5432/telegramBot'
		default_user = 'postgres'
		default_password = 'Xemyru'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.flywaydb.flyway' version '10.4.1'
	id 'nu.studer.jooq' version '8.2'
}

group = 'com.mindmentor'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	flywayMigration
}
repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.postgresql:postgresql'
	implementation 'org.json:json:20231013'
	implementation 'io.jsonwebtoken:jjwt:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'com.auth0:java-jwt:3.18.1'
	implementation 'org.flywaydb:flyway-core:10.4.0'
	implementation 'org.flywaydb:flyway-database-postgresql:10.4.1'
	implementation 'org.apache.commons:commons-compress:1.26.0'
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'
	implementation 'software.amazon.awssdk:s3:2.20.42'
	implementation 'software.amazon.awssdk:auth:2.20.42'

	// OpenAPI/Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// Jackson (рекомендуется использовать версии, совместимые с вашими библиотеками)
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'

	// Тестирование
	testImplementation 'io.rest-assured:rest-assured:5.4.0'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers:3.2.3'
	testImplementation 'org.testcontainers:postgresql:1.19.6'
	testImplementation 'org.testcontainers:testcontainers:1.19.6'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.6'
	testImplementation 'org.assertj:assertj-core:3.25.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	jooqGenerator 'org.postgresql:postgresql:42.6.0'
}

/*dependencies {
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.2.0'
	implementation group: 'org.json', name: 'json', version: '20231013'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '6.2.1'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
	implementation("org.flywaydb:flyway-database-postgresql:10.4.1")
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.jooq:jooq'
	implementation 'org.jooq:jooq-meta'
	implementation 'org.jooq:jooq-codegen'
	implementation 'org.flywaydb:flyway-core:10.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'
	jooqGenerator 'org.postgresql:postgresql'
	flywayMigration 'org.postgresql:postgresql'
	implementation 'com.auth0:java-jwt:3.18.1'
	implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0')
	implementation('io.springfox:springfox-swagger2:3.0.0')
	implementation 'org.apache.commons:commons-compress:1.26.0'

	testImplementation 'io.rest-assured:rest-assured:5.4.0'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers:3.2.3'
	testImplementation 'org.testcontainers:postgresql:1.19.6'
	testImplementation 'org.testcontainers:testcontainers:1.19.6'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.6'
	testImplementation 'org.assertj:assertj-core:3.25.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'software.amazon.awssdk:s3:2.20.42'
	implementation 'software.amazon.awssdk:auth:2.20.42'

// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'
}*/

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/telegramBot'
	user = 'postgres'
	password = 'Xemyru'
	locations = ['filesystem:src/main/resources/db/migration']
	configurations = ['flywayMigration']

}

jooq {
	configurations {
		main {
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'org.postgresql.Driver'
					url = 'jdbc:postgresql://localhost:5432/telegramBot	'
					user = 'postgres'
					password = 'Xemyru'
				}

				generator {
					name = "org.jooq.codegen.JavaGenerator"
					target {
						packageName = 'com.example'
						directory = "build/generated/source/jooq/main"
					}
					database {
						name = "org.jooq.meta.postgres.PostgresDatabase"
					}
					generate {
						pojosEqualsAndHashCode = true
						relations = true
						deprecated = false
						records = true
						pojos = true
						immutablePojos = false
						fluentSetters = true
						springAnnotations = true
					}
					strategy {
						name = 'org.jooq.codegen.DefaultGeneratorStrategy'
					}
				}
			}
		}
	}
}

tasks.named('generateJooq').configure {
	dependsOn tasks.named('flywayMigrate')
	inputs.files(fileTree('src/main/resources/db/migration')).withPropertyName('migrations')
			.withPathSensitivity(PathSensitivity.RELATIVE)
	doLast {
		println "Flyway Locations: ${flyway.locations}"
	}
}

tasks.named("generateJooq") {
	dependsOn "flywayMigrate"
}

// Custom task to run Flyway migrations before JOOQ code generation
tasks.register('migrateAndGenerate') {
	dependsOn 'flywayMigrate'
	finalizedBy 'generateMainJooqSchemaSource'
}